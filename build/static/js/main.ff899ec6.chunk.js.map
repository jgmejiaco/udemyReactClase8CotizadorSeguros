{"version":3,"sources":["components/Header/header.jsx","helper.js","components/Formulario/formulario.jsx","components/Resumen/resumen.jsx","components/Resultado/resultado.jsx","components/Spinner/spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","section","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff899ec6.chunk.js","sourcesContent":["import React from 'react';\r\n// import styled from '@emotion/styled';\r\n// import styled from '@emotion/react';\r\n// import style, {Global, css } from '@emotion/react';\r\n// import styled, { css } from 'styled-components'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Librería \"emotion\", permite mezclar código CSS con JavaScript\r\nconst ContenedorHeader = styled.header `\r\n    background-color: #80eaf8;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1 `\r\n    font-size: 2rem;\r\n    margin: 0; \r\n    font-family: 'Slabo 27px';\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n}\r\nexport default Header;","//  Obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear (year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n//  Calcula el total a pagar según la marca\r\nexport function calcularMarca (marca) {\r\n    let incremento;\r\n\r\n    switch(marca) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return incremento;\r\n}\r\n\r\n//  Calcula el tipo de seguro\r\nexport function obtenerPlan (plan) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\n//  Muestra la primer letra en mayúscula\r\nexport function primerMayuscula (texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n","import React, {useState} from 'react';\r\n// import styled, { css } from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport {obtenerDiferenciaYear, calcularMarca, obtenerPlan} from '../../helper';\r\n\r\nconst Campo = styled.div `\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label `\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select `\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input `\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button `\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover {\r\n        background-color: #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div `\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\n\r\n\r\nconst Formulario = ({guardarResumen, guardarCargando}) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca:  '',\r\n        year:   '',\r\n        plan:   ''\r\n    });\r\n\r\n    const [error, guardarError] = useState(false); // State de Errores del Formulario\r\n\r\n    //  Extraer los valores del State (desestructuración de objetos)\r\n    const {marca, year, plan} = datos;\r\n\r\n    //  Leer los datos del formulario y colocarlos en el \"State\"\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n     //  Cuando usuario presiona botón de Submit del formulario\r\n     const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        //  Base de 2000\r\n        let resultado = 2000;\r\n\r\n        //  Obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        //  Por cada año hay que restar el 3%\r\n        resultado -= ((diferencia * 3 ) * resultado) / 100;\r\n        \r\n            // (Americano - 15%)\r\n            // (Asiático - 5%)\r\n            // (Europeo - 30%)\r\n        resultado = calcularMarca(marca) * resultado;\r\n      \r\n        //  Básico aumenta 20%\r\n        //  Completo aumenta 50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        //  Total\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n            //  Elimina el Spinner\r\n            guardarCargando(false);\r\n\r\n            //  Pasa la información al componente ppal\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                datos\r\n            });\r\n        }, 3000);\r\n       \r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={cotizarSeguro}>\r\n\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null} \r\n\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asíatico</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type = \"radio\"\r\n                    name = \"plan\"\r\n                    value = \"basico\"\r\n                    checked={plan === \"basico\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Básico\r\n\r\n                <InputRadio\r\n                    type = \"radio\"\r\n                    name = \"plan\"\r\n                    value = \"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Completo\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n// import styled, {css} from 'styled-components';\r\nimport styled from 'styled-components';\r\nimport {primerMayuscula} from '../../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    //  Extraer de datos\r\n    const {marca, year, plan} = datos\r\n    if(marca === '' || year === '' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotización</h2>\r\n            <ul>\r\n                <li>Marca: { primerMayuscula(marca) }</li>\r\n                <li>Año: { year }</li>\r\n                <li>Plan: { primerMayuscula(plan) }</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired,\r\n}\r\nexport default Resumen;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: 0.5rem;\r\n    border: 1px solid #26C6D4;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    background-color: rgb(127, 224, 237);\r\n    margin: 0;\r\n`;\r\n\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n    return ( \r\n        (cotizacion === 0)\r\n        ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n        :\r\n            (\r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component=\"span\"\r\n                        className=\"resultado\"\r\n                    >\r\n                        <CSSTransition\r\n                            classNames=\"resultado\"\r\n                            key={cotizacion}\r\n                            timeout={{enter: 500, exit: 500}}\r\n                        >\r\n                            <TextoCotizacion>\r\n                                El total es: $ <span>{cotizacion}</span>\r\n                            </TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            )\r\n        \r\n     );\r\n}\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired,\r\n}\r\nexport default Resultado;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, {useState} from 'react';\nimport Header from './components/Header/header';\n// import styled, { css } from 'styled-components';\nimport styled from 'styled-components';\nimport Formulario from './components/Formulario/formulario';\nimport Resumen from './components/Resumen/resumen';\nimport Resultado from './components/Resultado/resultado';\nimport Spinner from './components/Spinner/spinner';\n\n\nconst Contenedor = styled.section `\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div `\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] =  useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  //  Carga del Spinner\n  const [cargando, guardarCargando] = useState(false);\n\n  // Extraer datos (desestructuración)\n  const {cotizacion, datos} = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\" />\n\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spinner/> : null}\n        \n\n        {/* {datos ? (<Resumen />) : null} Es una forma de llamar los datos cuando NO sean Null */}\n        <Resumen datos={datos} />\n\n        { !cargando\n        ? <Resultado cotizacion={cotizacion} />\n        : null }\n\n        \n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}